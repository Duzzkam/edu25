{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.5.5"},"colab":{"name":"Копия блокнота \"scipy=optimization.ipynb\"","provenance":[{"file_id":"1BIOqY1gCrhDww41CWYSczX5YUsTXXLAw","timestamp":1608940265597}]}},"cells":[{"cell_type":"markdown","metadata":{"id":"0okXuY69T4vU"},"source":["# Решение оптимизационных задач в SciPy (Версия для Python 3)"]},{"cell_type":"code","metadata":{"id":"HhLSxhU9T4va"},"source":["from scipy import optimize"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"nYtQswggT4va","outputId":"fa69fe6c-418c-4f40-c912-c4a62f554926"},"source":["def f(x):   # The rosenbrock function\n","    return .5*(1 - x[0])**2 + (x[1] - x[0]**2)**2\n","    \n","print(f([1, 1]))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["0.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-zJYsG-GT4vb","outputId":"8fa4f131-1c31-4116-b154-def41ebbbcc9"},"source":["result = optimize.brute(f, ((-5, 5), (-5, 5)))\n","print(result)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[0.99999324 1.00001283]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"371oaYGjT4vc","outputId":"3e13c42e-845b-45c1-a05e-2c3c95aa31eb"},"source":["print(optimize.differential_evolution(f, ((-5, 5), (-5, 5))))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["     fun: 7.395570986446986e-32\n"," message: 'Optimization terminated successfully.'\n","    nfev: 3393\n","     nit: 112\n"," success: True\n","       x: array([1., 1.])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"mdRA5z0TT4vc"},"source":["import numpy as np\n","\n","def g(x):\n","        return np.array((-2*.5*(1 - x[0]) - 4*x[0]*(x[1] - x[0]**2), 2*(x[1] - x[0]**2)))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"RGplUHx1T4vd","outputId":"65f832eb-4381-44ea-be8e-c7f28843f0d8"},"source":["print(optimize.check_grad(f, g, [2, 2]))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["2.384185791015625e-07\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"JFBT2x84T4vd","outputId":"4e3e9ba1-d886-4fdc-8fb5-01da2cf194b6"},"source":["print(optimize.fmin_bfgs(f, [2, 2], fprime=g))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Optimization terminated successfully.\n","         Current function value: 0.000000\n","         Iterations: 8\n","         Function evaluations: 9\n","         Gradient evaluations: 9\n","[1.00000582 1.00001285]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"g3DvgSenT4vd","outputId":"54454651-aa30-4657-8611-8afe700667c3"},"source":["print(optimize.minimize(f, [2, 2]))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["      fun: 1.7838045907468558e-11\n"," hess_inv: array([[0.95489061, 1.90006632],\n","       [1.90006632, 4.27872378]])\n","      jac: array([9.88093227e-07, 2.41749084e-06])\n","  message: 'Optimization terminated successfully.'\n","     nfev: 36\n","      nit: 8\n","     njev: 9\n","   status: 0\n","  success: True\n","        x: array([1.00000573, 1.00001265])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"4S8kJXe-T4ve","outputId":"81ebfeb8-4a70-43d6-e0a8-e5ce846888f4"},"source":["print(optimize.minimize(f, [2, 2], method='BFGS'))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["      fun: 1.7838045907468558e-11\n"," hess_inv: array([[0.95489061, 1.90006632],\n","       [1.90006632, 4.27872378]])\n","      jac: array([9.88093227e-07, 2.41749084e-06])\n","  message: 'Optimization terminated successfully.'\n","     nfev: 36\n","      nit: 8\n","     njev: 9\n","   status: 0\n","  success: True\n","        x: array([1.00000573, 1.00001265])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"PC9KacVfT4ve","outputId":"8d49b59f-978d-482a-9185-e3790b42fad4"},"source":["print(optimize.minimize(f, [2, 2], method='Nelder-Mead'))"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" final_simplex: (array([[0.99998568, 0.99996682],\n","       [1.00002149, 1.00004744],\n","       [1.0000088 , 1.00003552]]), array([1.23119954e-10, 2.50768082e-10, 3.59639951e-10]))\n","           fun: 1.2311995365407462e-10\n","       message: 'Optimization terminated successfully.'\n","          nfev: 91\n","           nit: 46\n","        status: 0\n","       success: True\n","             x: array([0.99998568, 0.99996682])\n"],"name":"stdout"}]}]}